# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build wifi-connect

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: majorz/rust-test-deploy:rust-nightly-2018-01-08
      volumes:
        - /home/runner/work:/work
    steps:
    - uses: actions/checkout@v3
    - run: cargo fmt -- --write-mode=diff
    - run: cargo clippy -- #-D warnings

  build:
    needs: test
    runs-on: ubuntu-latest
    container: majorz/rust-rpi:rust-1.23.0
    steps:
    - uses: actions/checkout@v3
    - run: rustup install $TARGET
    - run: cargo build --release --target=rpi
    - run: cross-strip target/rpi/release/wifi-connect
    - name: Archive dist
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: target

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3 # Checking out the repo
    - name: Download dist artifact
      uses: actions/download-artifact@v3
      with:
        name: dist 
        path: target
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: ghcr.io/coderbotorg/backend
        # generate Docker tags based on the following events/attributes
        tags: |
          # always latest
          type=raw,value=latest
          # branch event
          type=ref,event=branch
          # tag event
          type=ref,event=tag
          # pull request event
          type=ref,event=pr
          # push event
          type=sha,enable=true,prefix=git-,format=short
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
          push: true
          platforms: linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          context: .
          file: Dockerfile
          cache-from: type=registry,ref=ghcr.io/coderbotorg/wifi-connect:latest
          cache-to: type=inline

